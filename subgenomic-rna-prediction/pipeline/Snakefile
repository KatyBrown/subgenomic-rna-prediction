# Rule to handle the final output (similar to the last command in a bash pipeline)
import os
import configparser
import subprocess
import SGFastq

start_point = config['general']["start_point"]
outdir = config['general']['output_dir']
if start_point == "sra_id":
    prefix = config["fastq"]["sra_run"]
else:
    prefix = config["fastq"]["outfile_prefix"]

rule get_fastq:
    input:
    output:
        "%s/fastqs/%s.fq.gz" % (outdir, prefix),
        "%s/fastqs/%s.fq.1.gz" % (outdir, prefix),
        "%s/fastqs/%s.fq.2.gz" % (outdir, prefix)
    run:
        if start_point == "raw_fastq":
            fastq_p1 = config["fastq"]["paired_end_1"]
            fastq_p2 = config["fastq"]["paired_end_2"]
            fastq_s = config["fastq"]["single_end"]
            SGFastq.zip_and_link(fastq_s,
                                 fastq_p1,
                                 fastq_p2,
                                 outdir,
                                 prefix)
